name: Build-macOS

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:

  macOS:
    runs-on: macos-latest

    steps:

    - name: Check Out Code
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Use CCache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: ${{ github.job }}-${{ runner.os }}
        max-size: "1500M"


    - name: Install Dependencies
      run: |
        brew install \
          pkg-config \
          cairomm@1.14 \
          libsigc++@2 \
          glfw \
          cmake \
          yaml-cpp \
          catch2 \
          libomp \
          vulkan-headers \
          vulkan-loader \
          spirv-tools \
          glslang \
          shaderc \
          molten-vk \
          ninja

    - name: Cache FFTS
      uses: actions/cache@v4
      with:
        path: ~/ffts-prefix
        key: ${{ runner.os }}-ffts-prefix


    - name: Clone and Build FFTS Library
      run: |
        [[ -d ~/ffts-prefix ]] && exit 0
        cd
        git clone https://github.com/anthonix/ffts.git
        cd ffts
        mkdir build
        cd build
        cmake \
          -DENABLE_SHARED=ON \
          -DCMAKE_INSTALL_PREFIX=$HOME/ffts-prefix \
          -DCMAKE_INSTALL_RPATH=$HOME/ffts-prefix/lib \
          -DCMAKE_MACOSX_RPATH=ON \
          -GNinja \
          ..
        ninja
        sudo ninja install

    - name: Configure
      run: |
        export CMAKE_C_COMPILER_LAUNCHER=ccache
        export CMAKE_CXX_COMPILER_LAUNCHER=ccache
        mkdir build
        cd build
        cmake \
          -DDISABLE_PCH=ON \
          -G Ninja \
          -DCMAKE_BUILD_TYPE=Release \
          -DBUILD_DOCS=OFF \
          -DBUILD_TESTING=ON \
          -DCMAKE_PREFIX_PATH="$(brew --prefix)/opt/libomp;$HOME/ffts-prefix" \
          ..

    - name: Build
      run: |
        cd build
        ninja

    - name: Run Tests
      if: ${{ false }} # Metal is not available on GH macOS runners
      run: |
        cd build
        ninja test

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ngscopeclient-${{ runner.os }}-${{ github.job }}
        path: |
          build/src/ngscopeclient/ngscopeclient
          build/src/ngscopeclient/icons/*
          build/src/ngscopeclient/shaders/*
          build/lib/scopehal/libscopehal.dylib
          build/lib/scopeprotocols/libscopeprotocols.dylib